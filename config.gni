declare_args() {
  use_httpse_shared_lib = is_mac
  httpse_flags = ""
}

httpse_shared_lib_install_name = ""

if (use_httpse_shared_lib && httpse_flags == "") {
  if (!is_component_build) {
    httpse_shared_lib_install_name = "@loader_path/../../Libraries/libhttps_everywhere_lib_cpp.dylib"
    httpse_flags = "-C link-args=-Wl,-install_name,$httpse_shared_lib_install_name"
  }
}

httpse_build_path = "$root_gen_dir/httpse/out"

httpse_lib_path = httpse_build_path

httpse_target = ""

# See https://forge.rust-lang.org/platform-support.html for possible targets
if (is_win) {
  if (current_cpu == "x86") {
    httpse_flags += " -C target-feature=+crt-static"
    httpse_target = "i686-pc-windows-msvc"
  } else if (current_cpu == "x64") {
    httpse_target = "x86_64-pc-windows-msvc"
  }
} else if (is_mac) {
  if (current_cpu == "x64") {
    httpse_target = "x86_64-apple-darwin"
  }
} else if (is_linux) {
  if (current_cpu == "x64") {
    httpse_target = "x86_64-unknown-linux-gnu"
  }
} else if (is_android) {
  if (current_cpu == "arm") {
    httpse_target = "arm-linux-androideabi"
  } else if (current_cpu == "arm64") {
    httpse_target = "aarch64-linux-android"
  } else if (current_cpu == "x86") {
    httpse_target = "i686-linux-android"
  } else if (current_cpu == "x64") {
    httpse_target = "x86_64-linux-android"
  }
} else if (is_ios) {
  if (current_cpu == "arm64") {
    httpse_target = "aarch64-apple-ios"
  } else if (current_cpu == "x64") {
    httpse_target = "x86_64-apple-ios"
  }
}

if (httpse_target != "") {
  httpse_lib_path += "/" + httpse_target
}

if (is_debug) {
  httpse_lib_path += "/debug"
} else {
  httpse_lib_path += "/release"
}

if (is_win) {
  httpse_lib_path += "/httpse.lib"
} else if (is_linux || is_android || is_ios) {
  httpse_lib_path += "/libhttps_everywhere_lib_cpp.a"
} else if (is_mac) {
  if (use_httpse_shared_lib) {
    httpse_lib_path += "/libhttps_everywhere_lib_cpp.dylib"
  } else {
    httpse_lib_path += "/libhttps_everywhere_lib_cpp.a"
  }
}
